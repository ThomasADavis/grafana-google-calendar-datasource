{"version":3,"sources":["../src/datasource.js"],"names":["_","moment","gpai","GoogleCalendarDatasource","instanceSettings","$q","templateSrv","type","name","clientId","jsonData","scopes","discoveryDocs","q","initialized","onSuccess","gapi","client","load","deferred","defer","self","init","scope","then","resolve","status","message","title","err","console","log","reject","details","promise","onFail","isSignedIn","auth2","getAuthInstance","get","listen","success","signIn","options","annotation","calendarId","isEmpty","initialize","calendar","events","list","range","from","toISOString","to","response","result","items","chain","map","event","start","dateTime","date","end","time","valueOf","summary","tags","text","flatten","value"],"mappings":"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","file":"datasource.js","sourcesContent":["import _ from 'lodash';\nimport moment from 'moment';\nimport gpai from './libs/api';\n\nexport class GoogleCalendarDatasource {\n\n  constructor(instanceSettings, $q, templateSrv) {\n    this.type = instanceSettings.type;\n    this.name = instanceSettings.name;\n    this.clientId = instanceSettings.jsonData.clientId;\n    this.scopes = 'https://www.googleapis.com/auth/calendar.readonly';\n    this.discoveryDocs = [\"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\"];\n    this.q = $q;\n    this.templateSrv = templateSrv;\n    this.initialized = false;\n  }\n\n  load(onSuccess) {\n    if (gapi.client) {\n      return onSuccess();\n    }\n    gapi.load('client:auth2', function () {\n      onSuccess();\n    });\n  }\n\n  testDatasource() {\n    var deferred = this.q.defer();\n    var self = this;\n    self.load(function () {\n      gapi.client.init({\n        clientId: self.clientId,\n        scope: self.scopes,\n        discoveryDocs: self.discoveryDocs\n      }).then(function () {\n        deferred.resolve({ status: 'success', message: 'Data source is working', title: 'Success' });\n      }, function(err) {\n        console.log(err);\n        deferred.reject({ message: err.details });\n      });\n    });\n    return deferred.promise;\n  }\n\n  initialize(onSuccess, onFail) {\n    var self = this;\n    if (self.initialized) {\n      return onSuccess();\n    }\n\n    self.load(function () {\n      gapi.client.init({\n        clientId: self.clientId,\n        scope: self.scopes,\n        discoveryDocs: self.discoveryDocs\n      }).then(function () {\n        var isSignedIn = gapi.auth2.getAuthInstance().isSignedIn.get();\n        if (!isSignedIn) {\n          gapi.auth2.getAuthInstance().isSignedIn.listen(function (success) {\n            if (success) {\n              self.initialized = true;\n              return onSuccess();\n            } else {\n              return onFail('failed to sign-in');\n            }\n          });\n          gapi.auth2.getAuthInstance().signIn();\n        } else {\n          self.initialized = true;\n          return onSuccess();\n        }\n      }, function(err) {\n        console.log(err);\n        return onFail('failed to init');\n      });\n    });\n  }\n\n  annotationQuery(options) {\n    var annotation = options.annotation;\n    var calendarId = annotation.calendarId;\n    var deferred = this.q.defer();\n\n    if (_.isEmpty(calendarId)) {\n      return deferred.resolve([]);\n    }\n\n    var self = this;\n    self.initialize(function () {\n      gapi.client.calendar.events.list({\n        'calendarId': calendarId,\n        'timeMin': options.range.from.toISOString(),\n        'timeMax': options.range.to.toISOString(),\n        'showDeleted': false,\n        'singleEvents': true,\n        'maxResults': 250,\n        'orderBy': 'startTime'\n      }).then(function (response) {\n        var events = response.result.items;\n\n        var result = _.chain(events)\n          .map(function (event) {\n            var start = moment(event.start.dateTime || event.start.date);\n            var end = moment(event.end.dateTime || event.end.date);\n\n            return [\n              {\n                annotation: annotation,\n                time: start.valueOf(),\n                title: event.summary,\n                tags: ['start'],\n                text: event.summary\n              },\n              {\n                annotation: annotation,\n                time: end.valueOf(),\n                title: event.summary,\n                tags: ['end'],\n                text: event.summary\n              }\n            ];\n          }).flatten().value();\n\n        deferred.resolve(result);\n      });\n    }, function (err) {\n      console.log(err);\n      deferred.reject(err);\n    });\n\n    return deferred.promise;\n  }\n}\n"]}